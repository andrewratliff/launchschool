#! /usr/bin/env ruby

require "pg"
require "pry"

class CLI
  def new
    ExpenseData.new
  end

  def run(args)
    parse_input
  end

  def parse_input
    help_msg if ARGV.empty?

    case ARGV.first
    when "list"
      list_expenses
    when "add"
      if ARGV.size < 3
        puts "You must provide an amount and memo."
        return
      end

      amount = ARGV[1]
      memo = ARGV[2]

      add_expense(amount, memo)
    end
  end

  def help_msg
    puts <<~MSG
      An expense recording system

      Commands:

      add AMOUNT MEMO [DATE] - record a new expense
      clear - delete all expenses
      list - list all expensees
      delete NUMBER - remove expense with id NUMBER
      search QUERY - list expenses with a match memo field
    MSG
  end
end

class ExpenseData
  def connection
    @connection ||= PG.connect(dbname: "expenses")
  end

  def list_expenses
    expenses = connection.exec("SELECT * FROM expenses ORDER BY created_on;")

    if expenses.values.empty?
      puts "There are no expenses."
      return
    end

    expenses.each do |tuple|
      columns = [tuple["id"].rjust(3),
                 tuple["created_on"].rjust(10),
                 tuple["amount"].rjust(12),
                 tuple["memo"]]

      puts columns.join(" | ")
    end
  end

  def add_expense(amount, memo)
    sql = "INSERT INTO expenses (amount, memo) VALUES ($1, $2)"
    db.exec_params(sql, [amount, memo])
  end
end

CLI.run(ARGV)
